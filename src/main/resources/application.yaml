server:
  port: 8082

spring:
  application:
    name: hotel-service

  # Database
  datasource:
    url: jdbc:postgresql://localhost:5432/hotel_service_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  # JPA
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Liquibase
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
    enabled: true

  # Kafka
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: hotel-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.hotelbooking.*"

  # Cloud Config
  config:
    import: "optional:configserver:http://localhost:8888"
  cloud:
    config:
      fail-fast: true
    openfeign:
      autoconfiguration:
        jackson:
          enabled:

# Eureka
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Feign
